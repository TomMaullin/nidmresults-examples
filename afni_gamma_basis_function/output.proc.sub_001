echo auto-generated by afni_proc.py, Wed Feb  3 14:28:53 2016
auto-generated by afni_proc.py, Wed Feb  3 14:28:53 2016
echo (version 4.57, December 7, 2015)
(version 4.57, December 7, 2015)
echo execution started: `date`
date
execution started: Wed  3 Feb 2016 14:29:21 GMT
afni -ver
Precompiled binary macosx_10.7_Intel_64: Jan  1 2016 (Version AFNI_16.0.00)
afni_history -check_date 28 Oct 2015
-- is current: afni_history as new as: 28 Oct 2015
               most recent entry is:   31 Dec 2015
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub_001
endif
set output_dir = sub_001.results
if ( -d sub_001.results ) then
set runs = ( `count -digits 2 1 1` )
count -digits 2 1 1
mkdir sub_001.results
mkdir sub_001.results/stimuli
cp /Users/u1591557/Documents/Single_Subject_Analysis_3/AV1_vis_timing_file_run1.txt /Users/u1591557/Documents/Single_Subject_Analysis_3/AV2_aud_timing_file_run1.txt sub_001.results/stimuli
3dcopy /Users/u1591557/Documents/Single_Subject_Analysis_3/AFNI_data6/FT_analysis/FT/FT_anat+orig sub_001.results/FT_anat
++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
3dTcat -prefix sub_001.results/pb00.sub_001.r01.tcat /Users/u1591557/Documents/Single_Subject_Analysis_3/AFNI_data6/FT_analysis/FT/FT_epi_r1+orig[2..$]
++ 3dTcat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
set tr_counts = ( 150 )
cd sub_001.results
touch out.pre_ss_warn.txt
foreach run ( 01 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub_001.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ 64203 voxels passed mask/clip
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D
foreach run ( 01 )
3dTshift -tzero 0 -quintic -prefix pb01.sub_001.r01.tshift pb00.sub_001.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
end
align_epi_anat.py -anat2epi -anat FT_anat+orig -save_skullstrip -suffix _al_junk -epi pb01.sub_001.r01.tshift+orig -epi_base 2 -epi_strip 3dAutomask -volreg off -tshift off
#++ align_epi_anat version: 1.50
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./pb01.sub_001.r01.tshift+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./pb01.sub_001.r01.tshift+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./FT_anat+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_pb01.sub_001.r01.tshift*
#Script is running:
  \rm -f ./__tt_FT_anat*
#Script is running (command trimmed):
  3dcopy ./FT_anat+orig ./__tt_FT_anat+orig
++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_FT_anat+orig -prefix ./__tt_FT_anat_ns
#Script is running (command trimmed):
  3dinfo ./__tt_FT_anat_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /Users/u1591557/Desktop/afni_gamma/subject_results/group.afni_data_6/subj.sub_001/sub_001.results/__tt_FT_anat_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./pb01.sub_001.r01.tshift+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /Users/u1591557/Desktop/afni_gamma/subject_results/group.afni_data_6/subj.sub_001/sub_001.results/pb01.sub_001.r01.tshift+orig is not oblique
#++ Creating representative epi sub-brick
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_pb01.sub_001.r01.tshift_ts ./pb01.sub_001.r01.tshift+orig'[2]'
++ 3dbucket: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
#++ resampling epi to match anat data
#Script is running (command trimmed):
  3dresample -master ./__tt_FT_anat_ns+orig -prefix ./__tt_pb01.sub_001.r01.tshift_ts_rs -inset ./__tt_pb01.sub_001.r01.tshift_ts+orig'' -rmode Cu
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns ./__tt_pb01.sub_001.r01.tshift_ts_rs+orig
++ 3dAutomask: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_pb01.sub_001.r01.tshift_ts_rs+orig
++ Forming automask
 + Fixed clip level = 670.626282
 + Used gradual clip level = 547.453918 .. 753.133972
 + Number voxels above clip level = 1656803
 + Clustering voxels ...
 + Largest cluster has 1647431 voxels
 + Clustering voxels ...
 + Largest cluster has 1646418 voxels
 + Filled  1116 voxels in small holes; now have 1647534 voxels
 + Filled 18264 voxels in large holes; now have 1665798 voxels
 + Clustering voxels ...
 + Largest cluster has 1665790 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 9803010 voxels
 + Mask now has 1665790 voxels
++ 1665790 voxels in the mask [out of 11468800: 14.52%]
++ first  40 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  40 y-planes are zero [from S]
++ last  111 y-planes are zero [from I]
++ first  24 z-planes are zero [from L]
++ last   14 z-planes are zero [from R]
++ applying mask to original data
++ Writing masked data
++ CPU time = 2.530000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns+orig
#++ Applying threshold of 1679.000000 on /Users/u1591557/Desktop/afni_gamma/subject_results/group.afni_data_6/subj.sub_001/sub_001.results/__tt_pb01.sub_001.r01.tshift_ts_rs_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns_wt -a ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns+orig -expr 'min(1,(a/1679.000000))'
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_FT_anat_ns_al_junk_wtal -weight ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns_wt+orig -source ./__tt_FT_anat_ns+orig -prefix ./FT_anat_al_junk -base ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns+orig -nocmass -1Dmatrix_save ./FT_anat_al_junk_mat.aff12.1D -master SOURCE -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -onepass 
++ 3dAllineate: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./__tt_FT_anat_ns+orig.HEAD
++ Base dataset:   ./__tt_pb01.sub_001.r01.tshift_ts_rs_ns+orig.HEAD
++ Loading datasets
++ 2209675 voxels in -source_automask+4
++ Zero-pad: not needed
++ 1665789 voxels [14.5%] in weight mask
++ Number of points for matching = 1665789
++ Local correlation: blok type = 'RHDD(6.54321)'
++ shift param auto-range: -55.9..55.9 -76.7..76.7 -76.7..76.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + 12 free parameters
++ Normalized convergence radius = 0.001000
++ OpenMP thread count = 4
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
++ ========== sub-brick #0 ========== [total CPU to here=6.1 s]
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - copying weight image
 + - using 1665789 points from base image [use_all=0]
 + * Exit alignment setup routine
 + 1585732 total points stored in 2611 'RHDD(6.54321)' bloks
 + - Initial  cost = -0.053001
 + - Initial fine Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
*************************************************************************************************************************************************************************************
 + - Finalish cost = -0.362008 ; 514 funcs
****
 + - Final    cost = -0.362177 ; 122 funcs
 + Final fine fit Parameters:
       x-shift= 2.5146   y-shift=-0.1879   z-shift= 4.6114
       z-angle=-0.1115   x-angle= 5.9999   y-angle= 0.0276
       x-scale= 1.0030   y-scale= 0.9775   z-scale= 0.9384
     y/x-shear= 0.0186 z/x-shear= 0.0067 z/y-shear= 0.0722
 + - Fine net CPU time = 63.0 s
++ Computing output image
++ image warp: parameters = 2.5146 -0.1879 4.6114 -0.1115 5.9999 0.0276 1.0030 0.9775 0.9384 0.0186 0.0067 0.0722
++ Wrote -1Dmatrix_save ./FT_anat_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 71.0 sec  Elapsed = 35.8
++ ###########################################################
++ ### Please check results visually for alignment quality ###
++ ###########################################################
#++ Creating final output: skullstripped anat data
#Script is running (command trimmed):
  3dcopy ./__tt_FT_anat_ns+orig FT_anat_ns
++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat FT_anat+orig -save_skullstrip \
 -suffix _al_junk -epi pb01.sub_001.r01.tshift+orig -epi_base 2 -epi_strip \
 3dAutomask -volreg off -tshift off" \
 ./FT_anat_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_pb01.sub_001.r01.tshift*
#Script is running:
  \rm -f ./__tt_FT_anat*

# Finished alignment successfully

@auto_tlrc -base TT_N27+tlrc -input FT_anat_ns+orig -no_ss
Center distance of 34.909285 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ output dataset: ./__ats_tmp__ref_TT_N27_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2704.000100 ...
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_FT_anat_ns+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
RMS[0] = 67.0839 47.1771   ITER = 12/137
67.0839

Warping has converged.

++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ 3dWarp: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_FT_anat_ns+orig.HEAD -> __ats_tmp___pad40_FT_anat_ns.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_FT_anat_ns+orig.BRIK.gz -> __ats_tmp___pad40_FT_anat_ns.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ output dataset: ./__ats_tmp___upad40_FT_anat_ns+orig.BRIK
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_FT_anat_ns+orig
*+ WARNING: Changing the space of an ORIG view dataset may cause confusion!
*+ WARNING:  NIFTI copies will be interpreted as TLRC view (not TLRC space).
*+ WARNING:  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_FT_anat_ns+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset FT_anat_ns+orig __ats_tmp___upad40_FT_anat_ns+tlrc
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_FT_anat_ns+tlrc
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Warning: ignoring +tlrc on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___upad40_FT_anat_ns+tlrc.HEAD -> FT_anat_ns+tlrc.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___upad40_FT_anat_ns+tlrc.BRIK -> FT_anat_ns+tlrc.BRIK
Cleanup ...
cat_matvec FT_anat_ns+tlrc::WARP_DATA -I
if ( ! -f FT_anat_ns+tlrc.HEAD ) then
foreach run ( 01 )
3dvolreg -verbose -zpad 1 -base pb01.sub_001.r01.tshift+orig[2] -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub_001.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./pb01.sub_001.r01.tshift+orig.BRIK
++ Reading input dataset ./pb01.sub_001.r01.tshift+orig.BRIK
++ Edging: x=4 y=4 z=2
++ Creating mask for -maxdisp
 + Automask has 66765 voxels
 + 8106 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=5.84 s  [=0.0389 s/sub-brick]
++ Min : roll=-0.008  pitch=-1.292  yaw=-0.029  dS=-0.107  dL=-0.034  dP=-0.045
++ Mean: roll=+0.049  pitch=-0.178  yaw=+0.026  dS=+0.090  dL=+0.039  dP=+0.081
++ Max : roll=+0.140  pitch=+0.031  yaw=+0.097  dS=+0.265  dL=+0.104  dP=+0.228
++ Max displacements (mm) for each sub-brick:
 0.11(0.00) 0.03(0.10) 0.00(0.03) 0.05(0.05) 0.06(0.07) 0.12(0.11) 0.13(0.04) 0.13(0.13) 0.11(0.03) 0.14(0.08) 0.15(0.08) 0.10(0.10) 0.14(0.04) 0.10(0.07) 0.17(0.10) 0.12(0.08) 0.11(0.07) 0.14(0.11) 0.19(0.07) 0.11(0.19) 0.16(0.06) 0.17(0.10) 0.15(0.04) 0.19(0.05) 0.18(0.03) 0.16(0.06) 0.16(0.06) 0.18(0.04) 0.16(0.10) 0.18(0.11) 0.21(0.06) 0.24(0.16) 0.19(0.10) 0.20(0.09) 0.18(0.08) 0.18(0.02) 0.23(0.09) 0.25(0.02) 0.25(0.05) 0.21(0.06) 0.24(0.07) 0.16(0.23) 2.51(2.52) 2.48(0.21) 0.18(2.51) 0.23(0.25) 0.24(0.07) 0.23(0.11) 0.24(0.03) 0.24(0.02) 0.33(0.13) 0.29(0.08) 0.30(0.06) 0.35(0.10) 0.35(0.08) 0.38(0.09) 0.35(0.07) 0.38(0.06) 0.40(0.25) 0.36(0.19) 0.41(0.07) 0.35(0.14) 0.35(0.13) 0.38(0.04) 0.38(0.06) 0.32(0.13) 0.48(0.24) 0.47(0.05) 0.42(0.11) 0.43(0.08) 0.43(0.09) 0.50(0.07) 0.50(0.10) 0.46(0.08) 0.48(0.17) 0.53(0.20) 0.57(0.22) 0.60(0.06) 0.62(0.19) 0.63(0.07) 0.61(0.06) 0.65(0.07) 0.61(0.07) 0.59(0.05) 0.59(0.02) 0.60(0.08) 0.62(0.03) 0.60(0.08) 0.63(0.11) 0.66(0.07) 0.60(0.15) 0.61(0.05) 0.63(0.11) 0.62(0.05) 0.61(0.06) 0.63(0.03) 0.66(0.04) 0.63(0.05) 0.64(0.06) 0.63(0.04) 0.61(0.02) 0.62(0.06) 0.62(0.07) 0.57(0.07) 0.61(0.07) 0.58(0.09) 0.65(0.15) 0.60(0.15) 0.56(0.06) 0.62(0.13) 0.60(0.06) 0.54(0.09) 0.55(0.10) 0.54(0.11) 0.56(0.10) 0.62(0.08) 0.61(0.06) 0.63(0.11) 0.63(0.12) 0.57(0.07) 0.62(0.14) 0.62(0.04) 0.60(0.02) 0.61(0.05) 0.60(0.08) 0.63(0.12) 0.59(0.05) 0.64(0.05) 0.63(0.01) 0.62(0.06) 0.61(0.03) 0.60(0.02) 0.62(0.04) 0.59(0.06) 0.62(0.06) 0.59(0.08) 0.60(0.05) 0.61(0.05) 0.58(0.08) 0.61(0.11) 0.65(0.07) 0.61(0.12) 0.62(0.05) 0.63(0.03) 0.58(0.10) 0.60(0.12) 0.60(0.04) 0.56(0.12) 0.55(0.04) 0.56(0.06)
++ Max displacement in automask = 2.51 (mm) at sub-brick 42
++ Max delta displ  in automask = 2.52 (mm) at sub-brick 42
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub_001.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
*+ WARNING: input 'a' is not used in the expression
cat_matvec -ONELINE FT_anat_ns+tlrc::WARP_DATA -I FT_anat_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base FT_anat_ns+tlrc -input pb01.sub_001.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./pb01.sub_001.r01.tshift+orig.HEAD
++ Base dataset:   ./FT_anat_ns+tlrc.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 4
++ ========== Applying transformation to 150 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.8 s]
++ ========== sub-brick #1 ========== [total CPU to here=0.9 s]
++ ========== sub-brick #2 ========== [total CPU to here=1.0 s]
++ ========== sub-brick #3 ========== [total CPU to here=1.1 s]
++ ========== sub-brick #4 ========== [total CPU to here=1.1 s]
++ ========== sub-brick #5 ========== [total CPU to here=1.2 s]
++ ========== sub-brick #6 ========== [total CPU to here=1.2 s]
++ ========== sub-brick #7 ========== [total CPU to here=1.3 s]
++ ========== sub-brick #8 ========== [total CPU to here=1.4 s]
++ ========== sub-brick #9 ========== [total CPU to here=1.4 s]
++ ========== sub-brick #10 ========== [total CPU to here=1.5 s]
++ ========== sub-brick #11 ========== [total CPU to here=1.6 s]
++ ========== sub-brick #12 ========== [total CPU to here=1.6 s]
++ ========== sub-brick #13 ========== [total CPU to here=1.7 s]
++ ========== sub-brick #14 ========== [total CPU to here=1.8 s]
++ ========== sub-brick #15 ========== [total CPU to here=1.8 s]
++ ========== sub-brick #16 ========== [total CPU to here=1.9 s]
++ ========== sub-brick #17 ========== [total CPU to here=2.0 s]
++ ========== sub-brick #18 ========== [total CPU to here=2.0 s]
++ ========== sub-brick #19 ========== [total CPU to here=2.1 s]
++ ========== sub-brick #20 ========== [total CPU to here=2.1 s]
++ ========== sub-brick #21 ========== [total CPU to here=2.2 s]
++ ========== sub-brick #22 ========== [total CPU to here=2.3 s]
++ ========== sub-brick #23 ========== [total CPU to here=2.4 s]
++ ========== sub-brick #24 ========== [total CPU to here=2.4 s]
++ ========== sub-brick #25 ========== [total CPU to here=2.5 s]
++ ========== sub-brick #26 ========== [total CPU to here=2.6 s]
++ ========== sub-brick #27 ========== [total CPU to here=2.6 s]
++ ========== sub-brick #28 ========== [total CPU to here=2.7 s]
++ ========== sub-brick #29 ========== [total CPU to here=2.8 s]
++ ========== sub-brick #30 ========== [total CPU to here=2.8 s]
++ ========== sub-brick #31 ========== [total CPU to here=2.9 s]
++ ========== sub-brick #32 ========== [total CPU to here=3.0 s]
++ ========== sub-brick #33 ========== [total CPU to here=3.0 s]
++ ========== sub-brick #34 ========== [total CPU to here=3.1 s]
++ ========== sub-brick #35 ========== [total CPU to here=3.2 s]
++ ========== sub-brick #36 ========== [total CPU to here=3.2 s]
++ ========== sub-brick #37 ========== [total CPU to here=3.3 s]
++ ========== sub-brick #38 ========== [total CPU to here=3.4 s]
++ ========== sub-brick #39 ========== [total CPU to here=3.4 s]
++ ========== sub-brick #40 ========== [total CPU to here=3.5 s]
++ ========== sub-brick #41 ========== [total CPU to here=3.5 s]
++ ========== sub-brick #42 ========== [total CPU to here=3.6 s]
++ ========== sub-brick #43 ========== [total CPU to here=3.7 s]
++ ========== sub-brick #44 ========== [total CPU to here=3.7 s]
++ ========== sub-brick #45 ========== [total CPU to here=3.8 s]
++ ========== sub-brick #46 ========== [total CPU to here=3.9 s]
++ ========== sub-brick #47 ========== [total CPU to here=3.9 s]
++ ========== sub-brick #48 ========== [total CPU to here=4.0 s]
++ ========== sub-brick #49 ========== [total CPU to here=4.1 s]
++ ========== sub-brick #50 ========== [total CPU to here=4.1 s]
++ ========== sub-brick #51 ========== [total CPU to here=4.2 s]
++ ========== sub-brick #52 ========== [total CPU to here=4.3 s]
++ ========== sub-brick #53 ========== [total CPU to here=4.3 s]
++ ========== sub-brick #54 ========== [total CPU to here=4.4 s]
++ ========== sub-brick #55 ========== [total CPU to here=4.5 s]
++ ========== sub-brick #56 ========== [total CPU to here=4.5 s]
++ ========== sub-brick #57 ========== [total CPU to here=4.6 s]
++ ========== sub-brick #58 ========== [total CPU to here=4.7 s]
++ ========== sub-brick #59 ========== [total CPU to here=4.7 s]
++ ========== sub-brick #60 ========== [total CPU to here=4.8 s]
++ ========== sub-brick #61 ========== [total CPU to here=4.8 s]
++ ========== sub-brick #62 ========== [total CPU to here=4.9 s]
++ ========== sub-brick #63 ========== [total CPU to here=5.0 s]
++ ========== sub-brick #64 ========== [total CPU to here=5.0 s]
++ ========== sub-brick #65 ========== [total CPU to here=5.1 s]
++ ========== sub-brick #66 ========== [total CPU to here=5.2 s]
++ ========== sub-brick #67 ========== [total CPU to here=5.2 s]
++ ========== sub-brick #68 ========== [total CPU to here=5.3 s]
++ ========== sub-brick #69 ========== [total CPU to here=5.3 s]
++ ========== sub-brick #70 ========== [total CPU to here=5.4 s]
++ ========== sub-brick #71 ========== [total CPU to here=5.5 s]
++ ========== sub-brick #72 ========== [total CPU to here=5.5 s]
++ ========== sub-brick #73 ========== [total CPU to here=5.6 s]
++ ========== sub-brick #74 ========== [total CPU to here=5.7 s]
++ ========== sub-brick #75 ========== [total CPU to here=5.7 s]
++ ========== sub-brick #76 ========== [total CPU to here=5.8 s]
++ ========== sub-brick #77 ========== [total CPU to here=5.8 s]
++ ========== sub-brick #78 ========== [total CPU to here=5.9 s]
++ ========== sub-brick #79 ========== [total CPU to here=6.0 s]
++ ========== sub-brick #80 ========== [total CPU to here=6.0 s]
++ ========== sub-brick #81 ========== [total CPU to here=6.1 s]
++ ========== sub-brick #82 ========== [total CPU to here=6.2 s]
++ ========== sub-brick #83 ========== [total CPU to here=6.2 s]
++ ========== sub-brick #84 ========== [total CPU to here=6.3 s]
++ ========== sub-brick #85 ========== [total CPU to here=6.4 s]
++ ========== sub-brick #86 ========== [total CPU to here=6.4 s]
++ ========== sub-brick #87 ========== [total CPU to here=6.5 s]
++ ========== sub-brick #88 ========== [total CPU to here=6.6 s]
++ ========== sub-brick #89 ========== [total CPU to here=6.6 s]
++ ========== sub-brick #90 ========== [total CPU to here=6.7 s]
++ ========== sub-brick #91 ========== [total CPU to here=6.8 s]
++ ========== sub-brick #92 ========== [total CPU to here=6.8 s]
++ ========== sub-brick #93 ========== [total CPU to here=6.9 s]
++ ========== sub-brick #94 ========== [total CPU to here=6.9 s]
++ ========== sub-brick #95 ========== [total CPU to here=7.0 s]
++ ========== sub-brick #96 ========== [total CPU to here=7.1 s]
++ ========== sub-brick #97 ========== [total CPU to here=7.1 s]
++ ========== sub-brick #98 ========== [total CPU to here=7.2 s]
++ ========== sub-brick #99 ========== [total CPU to here=7.2 s]
++ ========== sub-brick #100 ========== [total CPU to here=7.3 s]
++ ========== sub-brick #101 ========== [total CPU to here=7.4 s]
++ ========== sub-brick #102 ========== [total CPU to here=7.4 s]
++ ========== sub-brick #103 ========== [total CPU to here=7.5 s]
++ ========== sub-brick #104 ========== [total CPU to here=7.6 s]
++ ========== sub-brick #105 ========== [total CPU to here=7.6 s]
++ ========== sub-brick #106 ========== [total CPU to here=7.7 s]
++ ========== sub-brick #107 ========== [total CPU to here=7.8 s]
++ ========== sub-brick #108 ========== [total CPU to here=7.8 s]
++ ========== sub-brick #109 ========== [total CPU to here=7.9 s]
++ ========== sub-brick #110 ========== [total CPU to here=8.0 s]
++ ========== sub-brick #111 ========== [total CPU to here=8.0 s]
++ ========== sub-brick #112 ========== [total CPU to here=8.1 s]
++ ========== sub-brick #113 ========== [total CPU to here=8.1 s]
++ ========== sub-brick #114 ========== [total CPU to here=8.2 s]
++ ========== sub-brick #115 ========== [total CPU to here=8.3 s]
++ ========== sub-brick #116 ========== [total CPU to here=8.3 s]
++ ========== sub-brick #117 ========== [total CPU to here=8.4 s]
++ ========== sub-brick #118 ========== [total CPU to here=8.4 s]
++ ========== sub-brick #119 ========== [total CPU to here=8.5 s]
++ ========== sub-brick #120 ========== [total CPU to here=8.6 s]
++ ========== sub-brick #121 ========== [total CPU to here=8.6 s]
++ ========== sub-brick #122 ========== [total CPU to here=8.7 s]
++ ========== sub-brick #123 ========== [total CPU to here=8.8 s]
++ ========== sub-brick #124 ========== [total CPU to here=8.8 s]
++ ========== sub-brick #125 ========== [total CPU to here=8.9 s]
++ ========== sub-brick #126 ========== [total CPU to here=8.9 s]
++ ========== sub-brick #127 ========== [total CPU to here=9.0 s]
++ ========== sub-brick #128 ========== [total CPU to here=9.1 s]
++ ========== sub-brick #129 ========== [total CPU to here=9.2 s]
++ ========== sub-brick #130 ========== [total CPU to here=9.2 s]
++ ========== sub-brick #131 ========== [total CPU to here=9.3 s]
++ ========== sub-brick #132 ========== [total CPU to here=9.3 s]
++ ========== sub-brick #133 ========== [total CPU to here=9.4 s]
++ ========== sub-brick #134 ========== [total CPU to here=9.5 s]
++ ========== sub-brick #135 ========== [total CPU to here=9.5 s]
++ ========== sub-brick #136 ========== [total CPU to here=9.6 s]
++ ========== sub-brick #137 ========== [total CPU to here=9.7 s]
++ ========== sub-brick #138 ========== [total CPU to here=9.7 s]
++ ========== sub-brick #139 ========== [total CPU to here=9.8 s]
++ ========== sub-brick #140 ========== [total CPU to here=9.8 s]
++ ========== sub-brick #141 ========== [total CPU to here=9.9 s]
++ ========== sub-brick #142 ========== [total CPU to here=10.0 s]
++ ========== sub-brick #143 ========== [total CPU to here=10.0 s]
++ ========== sub-brick #144 ========== [total CPU to here=10.1 s]
++ ========== sub-brick #145 ========== [total CPU to here=10.2 s]
++ ========== sub-brick #146 ========== [total CPU to here=10.2 s]
++ ========== sub-brick #147 ========== [total CPU to here=10.3 s]
++ ========== sub-brick #148 ========== [total CPU to here=10.4 s]
++ ========== sub-brick #149 ========== [total CPU to here=10.4 s]
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ 3dAllineate: total CPU time = 10.6 sec  Elapsed = 8.3
++ ###########################################################
3dAllineate -base FT_anat_ns+tlrc -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Zhark the Registrator
++ 3dAllineate: total CPU time = 8.0 sec  Elapsed = 6.8
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D
3dcopy rm.epi.min.r01+tlrc mask_epi_extents
++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
foreach run ( 01 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb02.sub_001.r01.volreg
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.sub_001.r01.volreg+tlrc.BRIK
end
3dcopy FT_anat_ns+tlrc anat_final.sub_001
++ 3dcopy: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
3dAllineate -source FT_anat+orig -master anat_final.sub_001+tlrc -final wsinc5 -1Dmatrix_apply warp.anat.Xat.1D -prefix anat_w_skull_warped
++ 3dAllineate: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Zhark the Registrator
++ -1Dmatrix_apply: converting input 3x4 array to 1 row of 12 numbers
++ Source dataset: ./FT_anat+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 4
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=2.9 s]
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
*+ WARNING: +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*+ WARNING: anat_w_skull_warped+tlrc[0] scale to shorts mean misfit error = 9.7% -- ** Take Care
 + a) Numerical precision has been lost when truncating results
       from 32-bit floating point to 16-bit integers (shorts).
 + b) Consider writing datasets out in float format.
       In most AFNI programs, use the '-float' option.
 + c) This warning is a new message, but is an old issue
       that arises when storing results in an integer format.
 + d) Don't panic! These messages likely originate in peripheral
       or unimportant voxels. They mean that you must examine your output.
       "Assess the situation and keep a calm head about you,
        because it doesn't do anybody any good to panic."
++ ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ 3dAllineate: total CPU time = 20.7 sec  Elapsed = 8.3
++ ###########################################################
foreach run ( 01 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.sub_001.r01.blur pb02.sub_001.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (83.5 MB)
-- Wrote edited dataset: ./pb03.sub_001.r01.blur+tlrc.BRIK
Editing sub-brick 0
Editing sub-brick 1
Editing sub-brick 2
Editing sub-brick 3
Editing sub-brick 4
Editing sub-brick 5
Editing sub-brick 6
Editing sub-brick 7
Editing sub-brick 8
Editing sub-brick 9
Editing sub-brick 10
Editing sub-brick 11
Editing sub-brick 12
Editing sub-brick 13
Editing sub-brick 14
Editing sub-brick 15
Editing sub-brick 16
Editing sub-brick 17
Editing sub-brick 18
Editing sub-brick 19
Editing sub-brick 20
Editing sub-brick 21
Editing sub-brick 22
Editing sub-brick 23
Editing sub-brick 24
Editing sub-brick 25
Editing sub-brick 26
Editing sub-brick 27
Editing sub-brick 28
Editing sub-brick 29
Editing sub-brick 30
Editing sub-brick 31
Editing sub-brick 32
Editing sub-brick 33
Editing sub-brick 34
Editing sub-brick 35
Editing sub-brick 36
Editing sub-brick 37
Editing sub-brick 38
Editing sub-brick 39
Editing sub-brick 40
Editing sub-brick 41
Editing sub-brick 42
Editing sub-brick 43
Editing sub-brick 44
Editing sub-brick 45
Editing sub-brick 46
Editing sub-brick 47
Editing sub-brick 48
Editing sub-brick 49
Editing sub-brick 50
Editing sub-brick 51
Editing sub-brick 52
Editing sub-brick 53
Editing sub-brick 54
Editing sub-brick 55
Editing sub-brick 56
Editing sub-brick 57
Editing sub-brick 58
Editing sub-brick 59
Editing sub-brick 60
Editing sub-brick 61
Editing sub-brick 62
Editing sub-brick 63
Editing sub-brick 64
Editing sub-brick 65
Editing sub-brick 66
Editing sub-brick 67
Editing sub-brick 68
Editing sub-brick 69
Editing sub-brick 70
Editing sub-brick 71
Editing sub-brick 72
Editing sub-brick 73
Editing sub-brick 74
Editing sub-brick 75
Editing sub-brick 76
Editing sub-brick 77
Editing sub-brick 78
Editing sub-brick 79
Editing sub-brick 80
Editing sub-brick 81
Editing sub-brick 82
Editing sub-brick 83
Editing sub-brick 84
Editing sub-brick 85
Editing sub-brick 86
Editing sub-brick 87
Editing sub-brick 88
Editing sub-brick 89
Editing sub-brick 90
Editing sub-brick 91
Editing sub-brick 92
Editing sub-brick 93
Editing sub-brick 94
Editing sub-brick 95
Editing sub-brick 96
Editing sub-brick 97
Editing sub-brick 98
Editing sub-brick 99
Editing sub-brick 100
Editing sub-brick 101
Editing sub-brick 102
Editing sub-brick 103
Editing sub-brick 104
Editing sub-brick 105
Editing sub-brick 106
Editing sub-brick 107
Editing sub-brick 108
Editing sub-brick 109
Editing sub-brick 110
Editing sub-brick 111
Editing sub-brick 112
Editing sub-brick 113
Editing sub-brick 114
Editing sub-brick 115
Editing sub-brick 116
Editing sub-brick 117
Editing sub-brick 118
Editing sub-brick 119
Editing sub-brick 120
Editing sub-brick 121
Editing sub-brick 122
Editing sub-brick 123
Editing sub-brick 124
Editing sub-brick 125
Editing sub-brick 126
Editing sub-brick 127
Editing sub-brick 128
Editing sub-brick 129
Editing sub-brick 130
Editing sub-brick 131
Editing sub-brick 132
Editing sub-brick 133
Editing sub-brick 134
Editing sub-brick 135
Editing sub-brick 136
Editing sub-brick 137
Editing sub-brick 138
Editing sub-brick 139
Editing sub-brick 140
Editing sub-brick 141
Editing sub-brick 142
Editing sub-brick 143
Editing sub-brick 144
Editing sub-brick 145
Editing sub-brick 146
Editing sub-brick 147
Editing sub-brick 148
Editing sub-brick 149
end
foreach run ( 01 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.sub_001.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub_001.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 664.782288
 + Used gradual clip level = 534.996582 .. 732.937866
 + Number voxels above clip level = 71663
 + Clustering voxels ...
 + Largest cluster has 71508 voxels
 + Clustering voxels ...
 + Largest cluster has 71480 voxels
 + Filled    54 voxels in small holes; now have 71534 voxels
 + Clustering voxels ...
 + Largest cluster has 71534 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 220306 voxels
 + Mask now has 71534 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 211107 voxels
++ 80733 voxels in the mask [out of 291840: 27.66%]
++ first   4 x-planes are zero [from R]
++ last    5 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    4 y-planes are zero [from P]
++ first  16 z-planes are zero [from I]
++ last    5 z-planes are zero [from S]
++ CPU time = 0.380000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD -union -prefix full_mask.sub_001
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 80733 survived, 211107 were zero
++ writing result full_mask.sub_001...
3dresample -master full_mask.sub_001+tlrc -input FT_anat_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.sub_001
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 92162 survived, 199678 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub_001...
3dABoverlap -no_automask full_mask.sub_001+tlrc mask_anat.sub_001+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
#A=./full_mask.sub_001+tlrc.BRIK  B=./mask_anat.sub_001+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
80733        92162        100319       72576        8157         19586        10.1037     21.2517     0.9480     0.9022     1.5230
3ddot -dodice full_mask.sub_001+tlrc mask_anat.sub_001+tlrc
tee out.mask_ae_dice.txt
0.839538	
3dresample -master full_mask.sub_001+tlrc -prefix ./rm.resam.group -input /Users/u1591557/abin/TT_N27+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 95647 survived, 196193 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 )
3dTstat -prefix rm.mean_r01 pb03.sub_001.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb03.sub_001.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub_001.r01.scale
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.sub_001.r01.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_sub_001
total number of censored TRs = 4
set ktrs = `1d_tool.py -infile motion_${subj}_censor.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile motion_sub_001_censor.1D -show_trs_uncensored encoded
3dDeconvolve -input pb04.sub_001.r01.scale+tlrc.HEAD -censor motion_sub_001_censor.1D -polort 3 -num_stimts 8 -stim_times 1 stimuli/AV1_vis_timing_file_run1.txt GAM -stim_label 1 vis_timing_file_run1 -stim_times 2 stimuli/AV2_aud_timing_file_run1.txt GAM -stim_label 2 aud_timing_file_run1 -stim_file 3 motion_demean.1D[0] -stim_base 3 -stim_label 3 roll -stim_file 4 motion_demean.1D[1] -stim_base 4 -stim_label 4 pitch -stim_file 5 motion_demean.1D[2] -stim_base 5 -stim_label 5 yaw -stim_file 6 motion_demean.1D[3] -stim_base 6 -stim_label 6 dS -stim_file 7 motion_demean.1D[4] -stim_base 7 -stim_label 7 dL -stim_file 8 motion_demean.1D[5] -stim_base 8 -stim_label 8 dP -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub_001 -errts errts.sub_001 -bucket stats.sub_001
++ 3dDeconvolve: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb04.sub_001.r01.scale+tlrc.HEAD
++ STAT automask has 165245 voxels (out of 291840 = 56.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ ** -stim_times NOTE ** guessing GLOBAL times if 1 time per line; LOCAL otherwise
++ ** GUESSED ** -stim_times 1 using LOCAL times
++ ** GUESSED ** -stim_times 2 using LOCAL times
++ Number of time points: 150 (before censor) ; 146 (after)
 + Number of parameters:  12 [10 baseline ; 2 signal]
++ Memory required for output bricks = 358,379,520 bytes (about 358 million [mega])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D -input pb04.sub_001.r01.scale+tlrc.HEAD \
 -fout -tout -Rbuck stats.sub_001_REML -Rvar stats.sub_001_REMLvar \
 -Rfitts fitts.sub_001_REML -Rerrts errts.sub_001_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (146x12):  4.19325  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (146x2):  1  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (146x10):  4.18503  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (146x6):  2.87928  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (146x4):  1.03493  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 4.16571e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.09 s
++ Calculations starting; elapsed time=0.736
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.
++ Calculations finished; elapsed time=10.726
++ Wrote bucket dataset into ./stats.sub_001+tlrc.BRIK
 + created 5 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.sub_001+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.sub_001+tlrc.BRIK
++ #Flops=1.9643e+10  Average Dot Product=20.4586
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
3dTcat -prefix all_runs.sub_001 pb04.sub_001.r01.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
3dTstat -mean -prefix rm.signal.all all_runs.sub_001+tlrc[0..40,45..149]
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.sub_001+tlrc[0..40,45..149]
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.sub_001+tlrc -expr c*a/b -prefix TSNR.sub_001
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.sub_001+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.sub_001+tlrc
++ 3dTnorm: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.sub_001+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
+++ 80733 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0371253
3dcalc -a rm.errts.unit+tlrc -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+tlrc.BRIK
3dTstat -sum -prefix corr_brain rm.DP+tlrc
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+tlrc.BRIK
1dcat X.nocensor.xmat.1D[4]
1dcat X.nocensor.xmat.1D[5]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[4,5]
++ 3dTstat: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[4,5]
touch blur_est.sub_001.1D
touch blur.epits.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..40,45..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.sub_001+tlrc all_runs.sub_001+tlrc[0..40,45..149]
++ 3dFWHMx: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 80733
*+ WARNING: removed 1172 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (2.72 CPU s thus far)
++ start FWHM calculations
 + FWHM done (3.30 CPU s thus far)
end
set blurs = ( `cat blur.epits.1D` )
cat blur.epits.1D
echo average epits blurs: 6.27522 6.06177 5.30852
average epits blurs: 6.27522 6.06177 5.30852
echo 6.27522 6.06177 5.30852   # epits blur estimates
touch blur.errts.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..40,45..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.sub_001+tlrc errts.sub_001+tlrc[0..40,45..149]
++ 3dFWHMx: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 80733
*+ WARNING: removed 1172 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (2.62 CPU s thus far)
++ start FWHM calculations
 + FWHM done (3.21 CPU s thus far)
end
set blurs = ( `cat blur.errts.1D` )
cat blur.errts.1D
echo average errts blurs: 6.19574 5.99161 5.24936
average errts blurs: 6.19574 5.99161 5.24936
echo 6.19574 5.99161 5.24936   # errts blur estimates
set fxyz = ( `tail -1 blur_est.$subj.1D` )
tail -1 blur_est.sub_001.1D
3dClustSim -both -mask full_mask.sub_001+tlrc -fwhmxyz 6.19574 5.99161 5.24936 -prefix ClustSim
++ 3dClustSim: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 80733 voxels in mask (27.66% of total)
*+ WARNING: -sumup canceled
++ Padding by 4 x 4 x 3 slices to allow for edge effects of blurring
++ Startup clock time = 0.0 s
++ Using 4 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.0123456789.!
++ Clock time now = 511.4 s
++ Clock time now = 512.9 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:ClustSim.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:ClustSim.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:ClustSim.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:ClustSim.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:ClustSim.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:ClustSim.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:ClustSim.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:ClustSim.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:ClustSim.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:ClustSim.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.cmd` )
cat 3dClustSim.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:ClustSim.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:ClustSim.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:ClustSim.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:ClustSim.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:ClustSim.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:ClustSim.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:ClustSim.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:ClustSim.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:ClustSim.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:ClustSim.NN3_bisided.niml stats.sub_001+tlrc
++ 3drefit: AFNI version=AFNI_16.0.00 (Jan  1 2016) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.sub_001+tlrc
++ applying attributes
++ 3drefit processed 1 datasets
gen_epi_review.py -script @epi_review.sub_001 -dsets pb00.sub_001.r01.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.DP+tlrc.BRIK rm.DP+tlrc.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD
tee out.ss_review.sub_001.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic

subject ID                : sub_001
TRs removed (per run)     : 2
num stim classes provided : 2
final anatomy dset        : anat_final.sub_001+tlrc.HEAD
final stats dset          : stats.sub_001+tlrc.HEAD
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.3
num TRs above mot limit   : 2
average motion (per TR)   : 0.0831955
average censored motion   : 0.0664901
max motion displacement   : 1.32561
max censored displacement : 0.455505
outlier limit             : 0.1
average outlier frac (TR) : 0.00446407
num TRs above out limit   : 1

num runs found            : 1
num TRs per run           : 150
num TRs per run (applied) : 146
num TRs per run (censored): 4
fraction censored per run : 0.0266667
TRs total (uncensored)    : 150
TRs total                 : 146
degrees of freedom used   : 12
degrees of freedom left   : 134

TRs censored              : 4
censor fraction           : 0.026667
num regs of interest      : 2
num TRs per stim (orig)   : 25 25
num TRs censored per stim : 0 0
fraction TRs censored     : 0.000 0.000
ave mot per sresp (orig)  : 0.065134 0.076930
ave mot per sresp (cens)  : 0.065134 0.076930

TSNR average              : 215.694
global correlation (GCOR) : 0.0371253
anat/EPI mask Dice coef   : 0.839538
maximum F-stat (masked)   : 23.1836
blur estimates            : 6.19574 5.99161 5.24936


cd ..
echo execution finished: `date`
date
execution finished: Wed  3 Feb 2016 14:42:04 GMT
